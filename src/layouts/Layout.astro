---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="view-transition" content="same-origin" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;900&display=swap"
      rel="stylesheet"
    />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>

<script>
  let scroll = document.documentElement.scrollTop;

  window.navigation.addEventListener('navigate', (event) => {
    const toUrl = new URL(event.destination.url);

    console.log('scroll', scroll);

    if (window.location.origin !== toUrl.origin) return;

    event.intercept({
      async handler() {
        if (toUrl.pathname !== '/') {
          scroll = document.documentElement.scrollTop;
        }

        const response = await fetch(toUrl.pathname);
        const text = await response.text();

        const regex = /<body[^>]*>([\s\S]*)<\/body>/i;
        const [, bodyContent] = text.match(regex);

        document.startViewTransition(() => {
          document.body.innerHTML = bodyContent.trim();
          document.documentElement.scrollTop = scroll;
        });
      },
    });
  });
</script>

<style is:global>
  body {
    font-family: 'Inter', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.5;
  }
</style>
